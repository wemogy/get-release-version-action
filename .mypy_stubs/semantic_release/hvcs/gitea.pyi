from _typeshed import Incomplete
from semantic_release.helpers import logged_function as logged_function
from semantic_release.hvcs._base import HvcsBase as HvcsBase
from semantic_release.hvcs.token_auth import TokenAuth as TokenAuth
from semantic_release.hvcs.util import build_requests_session as build_requests_session, suppress_not_found as suppress_not_found

log: Incomplete

class Gitea(HvcsBase):
    DEFAULT_DOMAIN: str
    DEFAULT_API_PATH: str
    DEFAULT_API_DOMAIN: Incomplete
    DEFAULT_ENV_TOKEN_NAME: str
    hvcs_domain: Incomplete
    hvcs_api_domain: Incomplete
    api_url: Incomplete
    token: Incomplete
    session: Incomplete
    def __init__(self, remote_url: str, hvcs_domain: str | None = None, hvcs_api_domain: str | None = None, token: str | None = None) -> None: ...
    def create_release(self, tag: str, release_notes: str, prerelease: bool = False) -> int: ...
    def get_release_id_by_tag(self, tag: str) -> int | None: ...
    def edit_release_notes(self, release_id: int, release_notes: str) -> int: ...
    def create_or_update_release(self, tag: str, release_notes: str, prerelease: bool = False) -> int: ...
    def asset_upload_url(self, release_id: str) -> str: ...
    def upload_asset(self, release_id: int, file: str, label: str | None = None) -> bool: ...
    def upload_dists(self, tag: str, dist_glob: str) -> int: ...
    def remote_url(self, use_token: bool = True) -> str: ...
    def commit_hash_url(self, commit_hash: str) -> str: ...
    def pull_request_url(self, pr_number: str | int) -> str: ...
